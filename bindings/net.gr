import WasmI64 from "runtime/unsafe/wasmi64"
import WasmI32 from "runtime/unsafe/wasmi32"

import Iovec from "runtime/wasi"

// import { iovec } from "bindings/wasi"
// import { ErrCode, IPType, TimeoutErrCode } from "../util"

/**
     * Performs a DNS resolution. The returned iterator may not actually yield any values
     * depending on the outcome of any resolution performed.
     *
     * @param {usize} name_str_ptr - A pointer to utf8 string that contains the host to resolve
     * @param {usize} name_str_len - The length of `name_str_ptr`
     * @param {u32} timeout - How long lunatic should wait until timing out
     * @param {usize} id_ptr - The pointer to the error or the resolution_id
     */

// @ts-ignore: external is valid here

export foreign wasm resolve: (
  WasmI64,
  WasmI64,
  WasmI32,
  WasmI64,
) -> ErrCode from "luanic::networking"

/**
     * Drop a dns iterator.
     *
     * @param {u64} id - The ID of the iterator.
     */

// @ts-ignore: external is valid here
export foreign wasm drop_dns_iterator: WasmI64 -> Void from "lunatic::networking"

/**
     * Drop a tcp listener.
     *
     * @param {u64} id - The ID of the listener.
     */

// @ts-ignore: external is valid here
export foreign wasm drop_tcp_listener: WasmI64 -> Void from "lunatic::networking"

/**
     * Drop a tcp stream.
     *
     * @param {u64} id - The ID of the stream.
     */

// @ts-ignore: external is valid here
export foreign wasm drop_tcp_stream: WasmI64 -> Void from "lunatic::networking"

/**
     * Clone a TCPStream.
     *
     * @param id - The id of the socket.
     * @returns The internal id for this tcp stream in this message.
     */

// @ts-ignore: external is valid here
export foreign wasm clone_tcp_stream: WasmI64 -> WasmI64 from "lunatic::networking"

/**
     * Takes the next socket address from DNS iterator and writes it to the passed pointers.
     * Address type is going to be a value of `4` or `6`, representing v4 or v6 addresses. The
     * caller needs to reserve enough space at `addr_u8_ptr` for both values to fit in :(16 bytes).
     * `flow_info_u32_ptr` & `scope_id_u32_ptr` are only going to be used with version v6.
     *
     * @param {u64} dns_iter_id - The DNS Iterator.
     * @param {usize} addr_type_ptr - A pointer to the address type.
     * @param {usize} add_u8_ptr - A pointer to the address bytes
     * @param {usize} port_u16_ptr - A pointer to the port
     * @param {usize} flow_info_u32_ptr - A pointer to the IP Address's flow info
     * @param {usize} scope_id_u32_ptr - A pointer to IP Address's scope id
     */

// @ts-ignore: external is valid here
export foreign wasm resolve_next: (
  WasmI64,
  WasmI64,
  WasmI64,
  WasmI64,
  WasmI64,
  WasmI64,
) -> ErrCode from "lunatic::networking"

/**
     * Creates a new TCP listener, which will be bound to the specified address. The returned listener
     * is ready for accepting connections.
     *
     * Binding with a port number of 0 will request that the OS assigns a port to this listener. The
     * port allocated can be queried via the `local_addr` :(TODO) method.
     *
     * @param {IPType} addr_type - The IP Address type.
     * @param {usize} addr_u8_ptr - A pointer to the address itself.
     * @param {u16} port - The port number for the IP Address
     * @param {u32} flow_info - The IPV6 Flow Info if the IP Address is v6.
     * @param {u32} scope_id - The IPV6 Scope ID if the IP Address is v6
     * @param {usize} id_u64_ptr - A pointer to the TCPListener id.
     */

// @ts-ignore: external is valid here
export foreign wasm tcp_bind: (
  IPType,
  WasmI64,
  WasmI64,
  WasmI64,
  WasmI64,
  WasmI64,
) -> ErrCode from "lunatic::networking"

/**
     * Accept a TCPListener.
     *
     * @param listener_id - The TCPListener.
     * @param id_ptr - A pointer to a u64 that will contain the TCPServer id or the error.
     * @param socket_addr_id_ptr - A pointer to a u64 that will contain a dns iterator.
     * @returns {ErrCode} - `err_code.Success` If the value written to `id_ptr` is an error or a socket id.
     */

// @ts-ignore: external is valid here
export foreign wasm tcp_accept: (
  WasmI64,
  WasmI64,
  WasmI64,
) -> ErrCode from "lunatic::networking"

/**
     * Read from a tcp stream. This function does the following things.
     *
     * @param stream_id - The TCP Stream to be read from.
     * @param buffer_ptr - The pointer to the buffer.
     * @param buffer_len - The length of the buffer.
     * @param timeout - A timeout.
     * @param opaque_ptr - A pointer to the error id.
     */

// @ts-ignore: external is valid here
export foreign wasm tcp_read: (
  WasmI64,
  WasmI64,
  WasmI64,
  WasmI32,
  WasmI64,
) -> TimeoutErrCode from "lunatic::networking"

/**
     * Write bytes to a stream.
     *
     * @param stream_id - The stream id.
     * @param ciovec_array_ptr - A ciovec array pointer to the data.
     * @param ciovec_array_len - The length of that vector.
     * @param timeout - A timeout in milliseconds for the write.
     * @param opaque_ptr - A pointer to write the number of bytes to, or the error.
     */

// @ts-ignore: external is valid here
export foreign wasm tcp_write_vectored: (
  WasmI64,
  Iovec,
  WasmI32,
  WasmI32,
  WasmI64,
) -> TimeoutErrCode from "lunatic::networking"

/**
     * Create a new tcp connection to a TCP Server.
     * @param {u32} addr_type - The address type, 4 or 6
     * @param {u32} addr_u8_ptr - A pointer to a memory location containing the ip address
     * @param {u16} port - The port of the ip address.
     * @param {u32} flow_info - The flow info
     * @param {u32} scope_id - The scope id.
     * @param {u32} timeout - A timeout in ms.
     * @param {usize} id_u64_ptr - A pointer to a 64 bit number that will contain the error string id,
     *                             or the id of the tcp socket.
     */

// @ts-ignore: external is valid here
export foreign wasm tcp_connect: (
  WasmI32,
  WasmI32,
  WasmI32,
  WasmI32,
  WasmI32,
  WasmI32,
  WasmI64,
) -> ErrCode from "lunatic::networking"

/**
     * Get the IP address associated with this listener.
     *
     * @param {u64} tcp_listener_id - The tcp_listener id.
     * @param {usize} id_u64_ptr - The u64 pointer to write the dns iterator to.
     */

// @ts-ignore: external is valid here
export foreign wasm tcp_local_addr: (
  WasmI64,
  WasmI64,
) -> ErrCode from "lunatic::networking"

/**
     * Get the IP address associated with this socket.
     *
     * @param {u64} socket_id - The socket id.
     * @param {usize} id_u64_ptr - The u64 pointer to write the dns iterator to.
     */

// @ts-ignore: external is valid here
export foreign wasm udp_local_addr: (
  WasmI64,
  WasmI64,
) -> ErrCode from "lunatic::networking"

/**
   * Bind to a udp socket to the given address
   *
   * @param {IPType} addr_type - The address type of the address being bound to.
   * @param {usize} addr_u8_ptr - A pointer to the address octets being bound to.
   * @param {u16} port - The port of the address being boudn to.
   * @param {u32} flow_info - The flow info of the ip address.
   * @param {u32} scope_id - The scope_id of the ip address.
   * @param {usize} id_u64_ptr - A pointer to write the socket id to.
   */

// @ts-ignore: External is valid here
export foreign wasm udp_bind: (
  IPType,
  WasmI64,
  WasmI32,
  WasmI32,
  WasmI32,
  WasmI64,
) -> ErrCode from "lunatic::networking"

/**
   * Read data from a socket.
   *
   * @param {u64} socket_id - The socket id of the socket being read from.
   * @param {usize} buffer_ptr - A pointer to a buffer to read the bytes.
   * @param {usize} buffer_len - The length of that buffer.
   * @param {u32} timeout - How long to wait before a read times out.
   * @param {usize} opaque_ptr - A pointer to write the number of bytes written.
   * @param {usize} dns_iter_ptr - A pointer to the generated dns_iterator to obtain the ip address.
   */

// @ts-ignore: External is valid here
export foreign wasm udp_receive: (
  WasmI64,
  WasmI64,
  WasmI32,
  WasmI32,
  WasmI64,
) -> TimeoutErrCode from "lunatic::networking"

/**
   * Read data from a socket.
   *
   * @param {u64} socket_id - The socket id of the socket being read from.
   * @param {usize} buffer_ptr - A pointer to a buffer to read the bytes.
   * @param {usize} buffer_len - The length of that buffer.
   * @param {u32} timeout - How long to wait before a read times out.
   * @param {usize} opaque_ptr - A pointer to write the number of bytes written.
   * @param {usize} dns_iter_ptr - A pointer to the generated dns_iterator to obtain the ip address.
   */

// @ts-ignore: External is valid here
export foreign wasm udp_receive_from: (
  WasmI64,
  WasmI64,
  WasmI32,
  WasmI32,
  WasmI64,
  WasmI64,
) -> TimeoutErrCode from "lunatic::networking"

/**
   * Send data from a socket to an Address.
   *
   * @param {u64} socket_id -The socket id.
   * @param {usize} buffer_ptr - A pointer to an array of bytes.
   * @param {usize} buffer_len - The length of that byte array.
   * @param {IPAddress} addr_type - The IP Address type being sent to.
   * @param {usize} addr_u8_ptr - The IP Address being sent to.
   * @param {u16} port - The port of the IP Address being sent to.
   * @param {u32} flow_info - The flow info of the IP Address being sent to.
   * @param {u32} scope_id - The scope id of the IP Address being sent to.
   * @param {u32} timeout - The ammount of time before a socket write timeout occurs.
   * @param {usize} opaque_ptr - A pointer to the number of bytes written, or the error id.
   */

// @ts-ignore: external valid here
export foreign wasm udp_send_to: (
  WasmI64,
  WasmI64,
  WasmI64,
  WasmI32,
  WasmI64,
  WasmI32,
  WasmI32,
  WasmI32,
  WasmI32,
  WasmI64,
) -> TimeoutErrCode from "lunatic::networking"

/**
   * Send data from a socket to the socket's connected address.
   *
   * @param {u64} socket_id -The socket id.
   * @param {usize} buffer_ptr - A pointer to an array of bytes.
   * @param {usize} buffer_len - The length of that byte array.
   * @param {u32} timeout - The ammount of time before a socket write timeout occurs.
   * @param {usize} opaque_ptr - A pointer to the number of bytes written, or the error id.
   */

// @ts-ignore: external valid here
export foreign wasm udp_send: (
  WasmI64,
  WasmI64,
  WasmI64,
  WasmI32,
  WasmI64,
) -> TimeoutErrCode from "lunatic::networking"

/**
   * Drop a udp socket.
   *
   * @param {u64} socket_id - The socket to be dropped.
   */

// @ts-ignore: external valid here
export foreign wasm drop_udp_socket: WasmI64 -> Void from "lunatic::networking"

/**
   * Get the broadcast value for this socket.
   *
   * @param socket_id - The socket id of the socket.
   */

// @ts-ignore: external valid here
export foreign wasm get_udp_socket_broadcast: WasmI64 -> WasmI32 from "lunatic::networking"

/**
 * Set the udp socket to broadcast.
 *
 * @param {u64} socket_id - The socket id of the socket being set.
 * @param {bool} broadcast - The broadcast value.
 */

// @ts-ignore: external valid here
export foreign wasm set_udp_socket_broadcast: (
  WasmI64,
  WasmI32,
) -> Void from "lunatic::networking"

/**
   * Get the ttl value for this socket.
   *
   * @param socket_id - The socket id of the socket.
   */

// @ts-ignore: external valid here
export foreign wasm get_udp_socket_ttl: WasmI64 -> WasmI32 from "lunatic::networking"

/**
   * Set the ttl value for this socket.
   *
   * @param {u64} socket_id - The socket id of the socket.
   * @param {bool} ttl - The ttl value
   */

// @ts-ignore: external valid here
export foreign wasm set_udp_socket_ttl: (
  WasmI64,
  WasmI32,
) -> Void from "lunatic::networking"

/**
   * Clone the socket by it's id.
   *
   * @param socket_id - The socket id of the socket.
   */

// @ts-ignore: external valid here
export foreign wasm clone_udp_socket: WasmI64 -> WasmI64 from "lunatic::networking"
